---
const { title, description, url, image, preloads, slackPreviewLabels = [], icon } = Astro.props
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<link rel="icon" href={icon} />
<meta property="og:type" content="website" />
<meta property="og:locale" content="en_US" />
<meta name="generator" content={Astro.generator} />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width,initial-scale=1" />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:title" content={title} />
<meta property="og:type" content="website" />
<meta property="og:description" content={description} />
<meta property="og:image" content={image} />
<meta property="og:url" content={url} />

<!-- Twitter -->
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:image" content={image} />
<meta property="twitter:url" content={url} />

<!-- Slack Preview Labels -->
{
  slackPreviewLabels &&
    slackPreviewLabels.length > 0 &&
    slackPreviewLabels.map((i, index) => (
      <>
        <meta name={'twitter:label' + (index + 1)} content={i.title} />
        <meta name={'twitter:data' + (index + 1)} content={i.href} />
      </>
    ))
}

<!-- Preload(s) -->
{preloads && preloads.map((i) => <link rel="preload" as={i.as} href={i.href} />)}
