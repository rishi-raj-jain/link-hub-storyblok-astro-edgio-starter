---
import SEO from '@/components/Shared/SEO.astro'
import Clipboard from '@/components/Shared/Clipboard.astro'

const updatedAt = new Date().toString()

const { content, background = {} } = Astro.props

const bg = {
  src: null,
  blurURL: {},
  style: '',
  className: '',
}

try {
  if ('image' in background) {
    const { type: format, width, height } = await probe(background.image)
    const { src } = await getImage({ src: background.image, alt: 'Background Image', width, height, format })
    if (src) {
      bg['src'] = src
    }
  }
} catch (e) {
  console.log(e.message || e.toString())
}

if ('color' in background) {
  bg['style'] = `background: ${background.color}`
}

if (!('color' in background || 'image' in background)) {
  bg['className'] = 'default-body'
}
---

<html lang="en">
  <head>
    <SEO {...content} />
    {bg.src && <link rel="preload" href={bg.src} />}
    <link href="/css/global.css" rel="stylesheet" />
    <noscript>
      <style>
        .hide-with-no-javascript {
          display: none !important;
        }
      </style>
    </noscript>
  </head>
  <body style={bg.style} class:list={['relative flex min-h-screen w-screen flex-col items-center overflow-x-hidden font-display', bg.className]}>
    {
      bg.src && (
        <img
          src={bg.src}
          loading="eager"
          decoding="async"
          alt="Background Image"
          class="fixed top-0 left-0 z-[-2] h-screen w-screen transform-gpu bg-cover bg-center bg-no-repeat object-cover"
        />
      )
    }
    <slot />
    <Clipboard />
    <span id="datestamp" class="hidden">{updatedAt}</span>
  </body>
</html>
